// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";

var initialState = /* record */[
  /* email */"",
  /* password */"",
  /* username */""
];

function reducer(state, action) {
  if (typeof action === "number") {
    return initialState;
  } else {
    switch (action.tag | 0) {
      case 0 : 
          return /* record */[
                  /* email */action[0],
                  /* password */state[/* password */1],
                  /* username */state[/* username */2]
                ];
      case 1 : 
          return /* record */[
                  /* email */state[/* email */0],
                  /* password */action[0],
                  /* username */state[/* username */2]
                ];
      case 2 : 
          return /* record */[
                  /* email */state[/* email */0],
                  /* password */state[/* password */1],
                  /* username */action[0]
                ];
      
    }
  }
}

function useForm(callback) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var handleChange = function (evt) {
    evt.persist();
    var match = evt.target.name;
    switch (match) {
      case "email" : 
          return Curry._1(dispatch, /* SetEmail */Block.__(0, [evt.target.value]));
      case "password" : 
          return Curry._1(dispatch, /* SetPassword */Block.__(1, [evt.target.value]));
      case "username" : 
          return Curry._1(dispatch, /* SetUsername */Block.__(2, [evt.target.value]));
      default:
        return /* () */0;
    }
  };
  var handleSubmit = function (evt) {
    evt.preventDefault();
    Curry._1(callback, /* () */0);
    return Curry._1(dispatch, /* ResetState */0);
  };
  return /* tuple */[
          match[0],
          handleChange,
          handleSubmit
        ];
}

export {
  initialState ,
  reducer ,
  useForm ,
  
}
/* react Not a pure module */
